---
title: "指针函数 函数指针 ，常量指针 指针常量，数组指针 指针数组"
layout: post
date: 2016-04-21 16:18
tag: C/C++
blog: true
star: true
---

## content:
 
{% highlight raw %}
-（1）指针函数 函数指针 
指针函数
即返回指针的函数。其一般定义形式如下：
类型名 *函数名(函数参数表列);
int *pfun(int, int);
由于“*”的优先级低于“()”的优先级，因而pfun首先和后面的“()”结合
函数指针：
int (*pfun)(int, int);
用函数指针作为指针函数的返回值
PF是一个函数指针“变量”。当使用typedef声明后，则PF就成为了一个函数指针“类型”，
即：
typedefint(*PF)(int *, int);
这样就定义了返回值的类型。然后，再用PF作为返回值来声明函数:
PF ff(int);
{% endhighlight %}   

{% highlight raw %}
-（2）常量指针 指针常量  
1.常量指针
定义：具有只能够读取内存中数据，却不能够修改内存中数据的属性的指针，
称为指向常量的指针，简称常量指针。
声明：const int * p; int const * p;
注：
可以将一个常量的地址赋值给一个对应类型的常量指针，
因为常量指针不能够通过指针修改内粗数据。
只能防止通过指针引用修改内存中的数据，并不保护指针所指向的对象。
2.指针常量
定义：指针常量是指指针所指向的位置不能改变，即指针本身是一个常量，
但是指针所指向的内容可以改变。
声明：int * const p=&a;
注：指针常量必须在声明的同时对其初始化，不允许先声明一个指针常量随后再对其赋值，
这和声明一般的常量是一样的。 
{% endhighlight %} 

{% highlight raw %}
-（3）数组指针 指针数组 
指针数组：首先它是一个数组，数组的元素都是指针，数组占多少个字节由数组本身决定。
它是“储存指针的数组”的简称。
A)int *p1[10];
数组指针：首先它是一个指针，它指向一个数组。在32 位系统下永远是占4 个字节，
至于它指向的数组占多少字节，不知道。它是“指向数组的指针”的简称。
B)int (*p2)[10];
{% endhighlight %} 